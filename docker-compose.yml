services:

  first:
    restart: always
    container_name: first
    build:
      context: ./first
      dockerfile: Dockerfile
    labels:
      - traefik.enable=true
      - api.insecure=true
      - traefik.http.services.app.loadbalancer.server.port=8081
      - traefik.http.routers.first.entrypoints=http
      - traefik.http.routers.first.rule=Host(`first.codewiser.online`)
      # configure https
      - traefik.http.routers.first.entrypoints=https
      - traefik.http.routers.first.rule=Host(`first.ibhaskar.com`)
      - traefik.http.routers.first.tls=true
      - traefik.http.routers.first.tls.certresolver=le
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # Middleware to redirect HTTP to HTTPS
      - traefik.http.routers.app-http.middlewares=https-redirect
      - traefik.docker.network=towapp
    command: [ "node", "app.js" ]
    networks:
      - towapp

  second:
    restart: always
    container_name: second
    build:
      context: ./second
      dockerfile: Dockerfile
    labels:
      # Enable Traefik for this specific "backend" service
      - traefik.enable=true
      # Define the port inside of the Docker service to use
      - traefik.http.services.app.loadbalancer.server.port=8081
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`second.ibhaskar.com`)
      # Use the traefik-public network (declared below)
      - traefik.docker.network=traefik-public
      # Make Traefik use this domain in HTTPS
      - traefik.http.routers.app-https.entrypoints=https
      - traefik.http.routers.app-https.rule=Host(`second.ibhaskar.com`)
      - traefik.http.routers.app-https.tls=true
      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.app-https.tls.certresolver=le
      # https-redirect middleware to redirect HTTP to HTTPS
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # Middleware to redirect HTTP to HTTPS
      - traefik.http.routers.app-http.middlewares=https-redirect
      #- traefik.http.routers.app-https.middlewares=admin-auth
      - traefik.docker.network=towapp
    command: [ "node", "server.js" ]
    networks:
      - towapp

networks:
  towapp:
    external: true
